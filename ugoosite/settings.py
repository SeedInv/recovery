"""
Django settings for ugoosite project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os 
import django_heroku
import dj_database_url
from decouple import config




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^w)0om5c9!%4kkr-ag4$n9l@8^*2j@xr8ckrjeu*(vs)c^!sph'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bitrive',
    'userprofile',
    'django_countries',
    'widget_tweaks',
    'investment',
    'recovery',
    'connectwallet',


]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'ugoosite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'bitrive' / 'templates', ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ugoosite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# STATIC_URL = 'static/'




# Define BASE_DIR as a Path object (if using modern Django)
BASE_DIR = Path(__file__).resolve().parent.parent

# Set where static files are located
STATICFILES_DIRS = [
    BASE_DIR / 'static',  # Correct path to the 'static' directory
    
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# URL path for accessing static files in the browser
STATIC_URL = '/static/'


MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR/'media'


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# Default session engine (use database-backed sessions)
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# Session lifetime settings (in seconds)
SESSION_COOKIE_AGE = 3600  # 1 hour (time in seconds)
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Expire session when the browser is closed

# Session cookie settings
SESSION_COOKIE_NAME = 'sessionid'  # The cookie name where the session ID will be stored
SESSION_COOKIE_HTTPONLY = True  # Prevent JavaScript access to session cookie for security
SESSION_COOKIE_SECURE = False  # Set to True in production if using HTTPS

# Set a session timeout (logout user after inactivity)
SESSION_SAVE_EVERY_REQUEST = True  # Save the session on every request (useful to track activity)




# PASSWORD RESET EMAIL BACKEND
# settings.py

# Email backend for production (e.g., using SendGrid)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'  # Replace with your email service provider's SMTP host
EMAIL_PORT = 587  # Usually 587 for TLS or 465 for SSL
EMAIL_USE_TLS = True  # Set to True for TLS
EMAIL_HOST_USER = 'your_sendgrid_username'  # Your SendGrid username
EMAIL_HOST_PASSWORD = 'your_sendgrid_password'  # Your SendGrid password or API key
DEFAULT_FROM_EMAIL = 'your_email@example.com'  # Your "from" email address




CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'

# Optional: Celery Beat for periodic tasks
INSTALLED_APPS += ['django_celery_beat']

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',  # Set to 'ERROR' in production to reduce noise
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'your_app_name': {  # Replace with the name of your app
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


django_heroku.settings(locals())